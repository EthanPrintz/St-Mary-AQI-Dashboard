{"version":3,"sources":["components/LeftCol.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","LeftColHeader","LeftCol","src","AppContainer","App","useEffect","fetch","then","response","text","csv","readString","catch","err","console","log","arr","sensorData","data","slice","readings","forEach","reading","utcTimestamp","readingType","readingValue","some","r","utc","findIndex","push","returnData","locationId","locationString","latitude","longitutde","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAcA,I,EAAMA,EAAYC,IAAOC,IAAV,sKAUTC,EAAgBF,IAAOC,IAAV,uMASJE,EA7Bf,WACE,OACE,cAACJ,EAAD,UACE,cAACG,EAAD,UACE,cAAC,IAAD,CAAUE,IAAI,oCCwDtB,IAAMC,EAAeL,IAAOC,IAAV,uHAQHK,EAtBf,WAOE,OANAC,qBAAU,WA5COC,MA8Cb,uNA7CDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAASC,YAAWD,MACzBE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAErBN,MAAK,SAACS,GAGb,IAAMC,EAAaD,EAAIE,KAAKC,MAAM,GAC9BC,EAAW,GACFH,EAAWE,MAAM,GACzBE,SAAQ,SAACC,GACZ,IAAMC,EAAeD,EAAQ,GACvBE,EAAcF,EAAQ,GACtBG,EAAeH,EAAQ,GAEzBF,EAASM,MAAK,SAACC,GAAD,OAAOA,EAAEC,MAAQL,KACjCH,EAASA,EAASS,WAAU,SAACF,GAAD,OAAOA,EAAEC,MAAQL,MAC3CC,GACEC,EAEJL,EAASU,KAAT,aACEF,IAAKL,GACJC,EAAcC,OAOrB,IAAMM,EAAa,CACjBC,WAAYf,EAAW,GAAG,GAC1BgB,eAAgBhB,EAAW,GAAG,GAC9BiB,SAAUjB,EAAW,GAAG,GACxBkB,WAAYlB,EAAW,GAAG,IAC1BG,YAIF,OADAN,QAAQC,IAAIgB,GACLA,OASN,IAGD,cAAC5B,EAAD,UACE,cAAC,EAAD,OC/CSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5221a9d8.chunk.js","sourcesContent":["import React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport styled from 'styled-components';\n\nfunction LeftCol() {\n  return (\n    <Container>\n      <LeftColHeader>\n        <ReactSVG src=\"./img/logos/openq-logo.svg\" />\n      </LeftColHeader>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 20rem;\n  height: 90vh;\n  position: absolute;\n  top: 5vh;\n  left: 5vh;\n  border-radius: 2rem;\n  background-color: #f4f4f4;\n`;\n\nconst LeftColHeader = styled.div`\n  width: 100%;\n  height: 5rem;\n  background-color: #f9f9f9;\n  border-bottom: 0.15rem solid #ededed;\n  border-top-right-radius: 2rem;\n  border-top-left-radius: 2rem;\n`;\n\nexport default LeftCol;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport { readString } from 'react-papaparse';\nimport LeftCol from './components/LeftCol';\n\nfunction getSensorDataByURL(url) {\n  const response = fetch(url)\n    .then((response) => response.text())\n    .then((csv) => readString(csv))\n    .catch((err) => console.log(err));\n\n  response.then((arr) => {\n    // locationId, location, city, coutnry, utc, local, parameter, value, unit, latitutde, longitude\n    // 0         , 1       , 2   , 3      , 4  , 5    , 6        , 7    , 8   , 9        , 10\n    const sensorData = arr.data.slice(1);\n    let readings = [];\n    const data = sensorData.slice(1);\n    data.forEach((reading) => {\n      const utcTimestamp = reading[4];\n      const readingType = reading[6];\n      const readingValue = reading[7];\n\n      if (readings.some((r) => r.utc === utcTimestamp)) {\n        readings[readings.findIndex((r) => r.utc === utcTimestamp)][\n          readingType\n        ] = readingValue;\n      } else {\n        readings.push({\n          utc: utcTimestamp,\n          [readingType]: readingValue,\n        });\n      }\n    });\n\n    // })\n\n    const returnData = {\n      locationId: sensorData[1][0],\n      locationString: sensorData[1][1],\n      latitude: sensorData[1][9],\n      longitutde: sensorData[1][10],\n      readings,\n    };\n\n    console.log(returnData);\n    return returnData;\n  });\n}\n\nfunction App() {\n  useEffect(() => {\n    getSensorDataByURL(\n      'https://u50g7n0cbj.execute-api.us-east-1.amazonaws.com/v2/measurements?format=csv&limit=66536&location=224746&date_from=2021-04-17T07%3A00%3A00.000Z&date_to=2021-05-01T07%3A00%3A00.000Z&parameter=130&parameter=2'\n    );\n  }, []);\n\n  return (\n    <AppContainer>\n      <LeftCol />\n    </AppContainer>\n  );\n}\n\nconst AppContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  padding: 0;\n  margin: 0;\n  background-color: grey;\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}